{"version":3,"sources":["components/ContactForm/index.jsx","components/Filter/index.jsx","components/ContactList/index.jsx","components/App/index.jsx","index.js"],"names":["ContactForm","state","name","number","resetState","setState","handleChange","target","value","handleSubmit","e","preventDefault","props","contacts","find","contact","contactToAdd","alert","this","className","onSubmit","type","required","onChange","Component","Filter","filterValue","contactList","onChangeFilter","length","ContactList","onHandleDeleteContact","onFilteredContacts","map","key","id","onClick","App","filter","toAddContact","v4","prevState","changeFilter","handleDeleteContact","filteredContacts","toLowerCase","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.552cce1a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  static propTypes = {\r\n    contactToAdd: propTypes.func.isRequired,\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) =>\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const prevValue = this.props.contacts.find(\r\n      contact => contact.name === this.state.name,\r\n    );\r\n    if (!prevValue) {\r\n      this.props.contactToAdd({ ...this.state });\r\n      this.resetState();\r\n      return;\r\n    }\r\n    alert(`${this.state.name} is already in contacts`);\r\n    this.resetState();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"contactForm\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className=\"contactFormInput\"\r\n            type=\"text\"\r\n            required\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className=\"contactFormInput\"\r\n            type=\"number\"\r\n            name=\"number\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"contactFormButton\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Filter = ({ filterValue, contactList, onChangeFilter }) =>\r\n  contactList.length > 2 && (\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={filterValue}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n\r\nFilter.propTypes = {\r\n  filterValue: propTypes.string.isRequired,\r\n  onChangeFilter: propTypes.func.isRequired,\r\n  contactList: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      number: propTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './styles.scss';\r\nconst ContactList = ({ onHandleDeleteContact, onFilteredContacts }) => (\r\n  <ul className=\"contactList\">\r\n    {onFilteredContacts.map(contact => (\r\n      <li className=\"contactListItem\" key={contact.id}>\r\n        <p>\r\n          {contact.name}: {contact.number}\r\n        </p>\r\n        <button\r\n          className=\"contactListButton\"\r\n          onClick={() => onHandleDeleteContact(contact.id)}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onHandleDeleteContact: propTypes.func.isRequired,\r\n  onFilteredContacts: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      number: propTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm/index';\r\nimport Filter from '../Filter/index';\r\nimport ContactList from '../ContactList/index';\r\nimport { v4 } from 'uuid';\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  toAddContact = state => {\r\n    const contactToAdd = {\r\n      ...state,\r\n      id: v4(),\r\n    };\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contactToAdd],\r\n    }));\r\n  };\r\n\r\n  changeFilter = ({ target: { value } }) => {\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  handleDeleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = filterContacts(contacts, filter);\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm contacts={contacts} contactToAdd={this.toAddContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          filterValue={filter}\r\n          contactList={contacts}\r\n          onChangeFilter={this.changeFilter}\r\n        />\r\n\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            onHandleDeleteContact={this.handleDeleteContact}\r\n            onFilteredContacts={filteredContacts}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/index';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}